-- BC100010.A
--
--                             Grant of Unlimited Rights
--
--     The Ada Conformity Assessment Authority (ACAA) holds unlimited
--     rights in the software and documentation contained herein. Unlimited
--     rights are the same as those granted by the U.S. Government for older
--     parts of the Ada Conformity Assessment Test Suite, and are defined
--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA
--     intends to confer upon all recipients unlimited rights equal to those
--     held by the ACAA. These rights include rights to use, duplicate,
--     release or disclose the released technical data and computer software
--     in whole or in part, in any manner and for any purpose whatsoever, and
--     to have or permit others to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS. THE ACAA MAKES NO EXPRESS OR IMPLIED
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--
--                                     Notice
--
--     The ACAA has created and maintains the Ada Conformity Assessment Test
--     Suite for the purpose of conformity assessments conducted in accordance
--     with the International Standard ISO/IEC 18009 - Ada: Conformity
--     assessment of a language processor. This test suite should not be used
--     to make claims of conformance unless used in accordance with
--     ISO/IEC 18009 and any applicable ACAA procedures.
--
--*
--
-- OBJECTIVE:
--     Check that a task or protected unit cannot be preceded by a generic
--     formal part.
--
-- TEST DESCRIPTION:
--     This test was inspired by ACVC test BC2001D and BC2001E. We usually
--     do not test syntax errors (as this requires guessing the kinds of
--     mistakes made by programmers), but as this was an existing test we
--     will make an exception. The original tests were replaced as they
--     required error correction for a rather unlikely case; most compilers
--     have required splitting those tests. The previous tests did not try
--     protected units (as those hadn't been invented yet).
--
--     To eliminate the need for error correction, we place one error in each
--     source file. To make the test more realistic, we place the test cases
--     into a package specification rather than a subprogram.
--
-- TEST FILES:
--     This test consists of the following files:
--     -> BC100010.A
--        BC100011.A
--        BC100012.A
--        BC100013.A
--        BC100014.A
--
-- PASS/FAIL CRITERIA:
--     Each of these files contain an error. An error must be detected in each
--     file to pass the test.
--
-- CHANGE HISTORY:
--     22 Apr 2021   RLB   Created test.
--     15 Jun 2021   RLB   Corrected typos in comments.
--!
package BC100010 is

   generic
      type Size is range <>;
   task type TGen is                                     -- ERROR: {2:4}
      entry Set_Size (S : in  Size);
      entry Get_Size (S : out Size);
   end TGen;

end BC100010;

